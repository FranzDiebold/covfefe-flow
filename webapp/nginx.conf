worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Enable Gzip
    gzip                on;
    gzip_http_version   1.0;
    gzip_comp_level     2;
    gzip_min_length     500;
    gzip_buffers        4 8k;
    gzip_proxied        any;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    gzip_static     on;

    gzip_proxied    expired no-cache no-store private auth;
    gzip_disable    "MSIE [1-6]\.";
    gzip_vary       on;

    # Enable browser caching
    expires         7d;

    server {
        listen      80;
        server_name covfefe-flow.ml;
        return 301 https://www.$host$request_uri;
    }

    server {
        listen      80;
        server_name *.covfefe-flow.ml;
        return 301 https://$host$request_uri;
    }

    ssl_certificate     /etc/ssl/covfefe-flow.ml/fullchain.pem;
    ssl_certificate_key /etc/ssl/covfefe-flow.ml/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    server {
        listen      443 ssl;
        server_name api.covfefe-flow.ml;

        charset     utf-8;

        access_log  /dev/stdout;
        error_log   /dev/stdout info;

        # max upload size
        client_max_body_size 128k;

        location / {
            add_header          Access-Control-Allow-Origin 'https://www.covfefe-flow.ml' always;
            add_header          Access-Control-Allow-Methods 'GET' always;
            add_header          Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;

            proxy_pass          http://api:8000;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }
    }


#    server {
#        listen      443 ssl;
#        server_name chatbot.covfefe-flow.ml;
#
#        charset     utf-8;
#
#        access_log  /dev/stdout;
#        error_log   /dev/stdout info;
#
#        # max upload size
#        client_max_body_size 128k;
#
#        location / {
#            proxy_pass          http://chatbot:8001;
#            proxy_set_header    Host $host;
#            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }
    }

    server {
        listen      443 ssl;
        server_name www.covfefe-flow.ml;

        charset     utf-8;

        access_log  /dev/stdout;
        error_log   /dev/stdout info;

        # max upload size
        client_max_body_size 128k;

        root        /var/www;

        include     /etc/nginx/mime.types;

        location / {
            try_files   $uri $uri/ /index.html;
        }
    }
}